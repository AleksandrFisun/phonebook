{"version":3,"file":"static/js/312.4d12c0d7.chunk.js","mappings":"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","sources":["components/Registration/RegistrationInput/RegistrationInput.style.js","components/Registration/RegistrationInput/RegistrationInput.jsx","components/Registration/RegistrationForm/RegistrationForm.style.js","components/Registration/RegistrationForm/RegistrationForm.jsx","components/Registration/Registration.style.js","components/Registration/Registration.jsx","Pages/RegistrationPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { TfiEmail } from 'react-icons/tfi';\nimport { RiLockPasswordLine } from 'react-icons/ri';\nimport { FiUser } from 'react-icons/fi';\n\nexport const InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`;\nexport const InputContainer = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  padding: 1px;\n  width: 300px;\n  border-radius: 4px;\n  border: 1px solid #dbdbdb;\n  &:focus,\n  &:hover {\n    border: 1px solid #b3b3b3;\n  }\n`;\nexport const User = styled(FiUser)`\n  position: absolute;\n  top: 50%;\n  left: 0;\n  margin-left: 10px;\n  transform: translate(-0, -50%);\n  color: #b3b3b3;\n`;\nexport const Email = styled(TfiEmail)`\n  position: absolute;\n  top: 50%;\n  left: 0;\n  margin-left: 10px;\n  transform: translate(-0, -50%);\n  color: #b3b3b3;\n`;\nexport const Password = styled(RiLockPasswordLine)`\n  position: absolute;\n  top: 50%;\n  left: 0;\n  margin-left: 10px;\n  transform: translate(-0, -50%);\n  color: #b3b3b3;\n`;\nexport const Input = styled.input`\n  width: 100%;\n  height: 30px;\n  border: none;\n  background-color: white;\n  padding-left: 40px;\n  &:focus,\n  &:hover {\n    outline: none;\n  }\n  &::placeholder {\n        color: #b3b3b3;\n`;\nexport const Label = styled.label`\n  color: black;\n  margin-bottom: 10px;\n`;\n","import { nanoid } from 'nanoid';\nimport {\n  InputWrapper,\n  InputContainer,\n  Input,\n  Label,\n  User,\n  Email,\n  Password,\n} from './RegistrationInput.style';\n\nconst RegistartionInput = ({ onChange, name, email, password }) => {\n  let contactNameId = nanoid();\n  let contactEmailId = nanoid();\n  let contactPasswordId = nanoid();\n\n  return (\n    <>\n      <InputWrapper>\n        <Label htmlFor={contactNameId}>Name</Label>\n        <InputContainer>\n          <User />\n          <Input\n            type=\"text\"\n            name=\"name\"\n            onChange={onChange}\n            value={name}\n            id={contactNameId}\n            placeholder=\"Name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </InputContainer>\n      </InputWrapper>\n      <InputWrapper>\n        <Label htmlFor={contactEmailId}>Email</Label>\n        <InputContainer>\n          <Email />\n          <Input\n            type=\"email\"\n            name=\"email\"\n            onChange={onChange}\n            value={email}\n            id={contactEmailId}\n            placeholder=\"Email address\"\n            pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\n            required\n          />\n        </InputContainer>\n      </InputWrapper>\n      <InputWrapper>\n        <Label htmlFor={contactPasswordId}>Password</Label>\n        <InputContainer>\n          <Password />\n          <Input\n            type=\"password\"\n            name=\"password\"\n            onChange={onChange}\n            value={password}\n            id={contactPasswordId}\n            placeholder=\"Password\"\n            pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\n            title=\"Must contain at least one  number and one uppercase and lowercase letter, and at least 8 or more characters\"\n            required\n          />\n        </InputContainer>\n      </InputWrapper>\n    </>\n  );\n};\nexport default RegistartionInput;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  margin-bottom:30px;\n  min-height: 400px;\n  min-width: 300px;\n  padding: 10px;\n  background: #fff;\n  border: 1px solid #eee;\n  border-radius: 4px;\n    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n\n}\n`;\n\nexport const Button = styled.button`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 23px;\n  text-transform: uppercase;\n  color: white;\n  text-decoration: none;\n  padding: 4px 16px;\n  border-radius: 4px;\n\n  border: 1px solid #2e2d2d;\n  background-color: #2e2d2d;\n  color: #c6ede6;\n  cursor: pointer;\n  transition-duration: 0.25s;\n  &:disabled {\n    opacity: 0;\n  }\n  &:hover,\n  &:focus,\n  &:active {\n    color: #c6ede6;\n    box-shadow: inset 0 0 0 1px #c6ede6;\n  }\n`;\nexport const NavigateLink = styled(NavLink)`\n  margin-left: 10px;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 23px;\n  text-transform: uppercase;\n  background-color: #c6ede6;\n  text-decoration: none;\n  padding: 8px 16px;\n\n  border: 1px solid #2e2d2d;\n  border-radius: 4px;\n  background-color: #2e2d2d;\n  color: #c6ede6;\n  cursor: pointer;\n  transition-duration: 0.25s;\n  &:disabled {\n    opacity: 0;\n  }\n  &:hover,\n  &:focus,\n  &:active {\n    border: 1px solid #c6ede6;\n    background-color: #c6ede6;\n    color: #2e2d2d;\n    box-shadow: inset 0 0 0 1px #2e2d2d;\n  }\n`;\n","import { useState } from 'react';\nimport RegistartionInput from '../RegistrationInput/RegistrationInput';\nimport { Form, NavigateLink, Button } from './RegistrationForm.style';\nimport { useDispatch } from 'react-redux';\nimport authOperations from 'redux/auth/authOperations';\n\nconst RegistrationForm = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const onSubmitFormReg = e => {\n    e.preventDefault();\n    dispatch(authOperations.userRegistration({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n  const changeInput = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n    }\n  };\n  return (\n    <>\n      <h2>Registartion</h2>\n      <Form onSubmit={onSubmitFormReg}>\n        <div>\n          <RegistartionInput\n            onChange={changeInput}\n            name={name}\n            email={email}\n            password={password}\n          />\n        </div>\n        <Button type=\"submit\">Registration</Button>\n      </Form>\n      <div>\n        <span>Already registered? Go to</span>\n        <NavigateLink to=\"/sign-in\">Sign In</NavigateLink>\n      </div>\n    </>\n  );\n};\nexport default RegistrationForm;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #1e1e1e;\n  margin: 30px 16px;\n  border: 1px solid transparent;\n  border-radius: 30px;\n`;\nexport const FormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 40px;\n`;\n","import RegistrationForm from 'components/Registration/RegistrationForm/RegistrationForm';\nimport { Section, FormWrapper } from './Registration.style';\nconst Registration = () => {\n  return (\n    <Section>\n      <FormWrapper>\n        <RegistrationForm />\n      </FormWrapper>\n    </Section>\n  );\n};\nexport default Registration;\n","import Registration from 'components/Registration/Registration';\nconst RegistrationPage = () => {\n  return <Registration />;\n};\nexport default RegistrationPage;\n"],"names":["InputWrapper","styled","InputContainer","User","FiUser","Email","TfiEmail","Password","RiLockPasswordLine","Input","Label","onChange","name","email","password","contactNameId","nanoid","contactEmailId","contactPasswordId","htmlFor","type","value","id","placeholder","pattern","title","required","Form","Button","NavigateLink","NavLink","useState","setName","setEmail","setPassword","dispatch","useDispatch","onSubmit","e","preventDefault","authOperations","currentTarget","to","Section","FormWrapper"],"sourceRoot":""}